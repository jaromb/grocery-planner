[debug] [2019-08-01T01:59:13.619Z] ----------------------------------------------------------------------
[debug] [2019-08-01T01:59:13.621Z] Command:       /Users/jarombridges/.nvm/versions/node/v10.15.0/bin/node /Users/jarombridges/.nvm/versions/node/v10.15.0/bin/firebase init firestore
[debug] [2019-08-01T01:59:13.621Z] CLI Version:   7.2.1
[debug] [2019-08-01T01:59:13.622Z] Platform:      darwin
[debug] [2019-08-01T01:59:13.622Z] Node Version:  v10.15.0
[debug] [2019-08-01T01:59:13.625Z] Time:          Wed Jul 31 2019 19:59:13 GMT-0600 (Mountain Daylight Time)
[debug] [2019-08-01T01:59:13.625Z] ----------------------------------------------------------------------
[debug] 
[debug] [2019-08-01T01:59:13.641Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-08-01T01:59:13.641Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/jarombridges/Helio/meal-planner/meal-planner

Before we get started, keep in mind:

  * You are initializing in an existing Firebase project directory

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[info] i  .firebaserc already has a default project, using grocery-list-6ba6e.
[debug] [2019-08-01T01:59:13.647Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2019-08-01T01:59:13.648Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2019-08-01T01:59:13.823Z] <<< HTTP RESPONSE 200
[debug] [2019-08-01T01:59:13.834Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/grocery-list-6ba6e  
 
[debug] [2019-08-01T01:59:14.786Z] <<< HTTP RESPONSE 200
[info] 
=== Firestore Setup
[debug] [2019-08-01T01:59:14.787Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-08-01T01:59:14.788Z] > authorizing via signed-in user
[debug] [2019-08-01T01:59:14.788Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/grocery-list-6ba6e  
 
[debug] [2019-08-01T01:59:14.968Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
